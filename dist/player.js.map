{"version":3,"sources":["../libs/player.js"],"names":[],"mappings":"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","file":"libs/player.js","sourcesContent":["/**\n*\n* Command line interface mp3 player based on Node.js\n* @Author:   [turingou](http://guoyu.me)\n* @Created:  [2013/07/20]\n*\n**/\n\nimport fs from 'fs'\nimport path from 'path'\nimport util from \"util\"\nimport http from 'http'\nimport https from 'https'\nimport home from 'home'\nimport lame from 'lame'\nimport async from 'async'\nimport events from \"events\"\nimport _ from 'underscore'\nimport Speaker from 'speaker'\nimport PoolStream from 'pool_stream'\nimport { fetchName, format, getProgress } from './utils'\n\nconst defaults = {\n  'src': 'src',\n  'cache': false,\n  'stream': false,\n  'downloads': home(),\n  'http_proxy': process.env.HTTP_PROXY || process.env.http_proxy || null,\n}\n\n/**\n * [Class Player]\n * @param {Array|String} songs  [A list of songs or a single song URI string.]\n * @param {Object}       params [Optional options when init a instance]\n */\nexport default class Player {\n  constructor(songs, params) {\n    if (!songs)\n      return\n\n    this.list = format(songs)\n    this.history = []\n    this.options = _.extend(defaults, params)\n\n    // Bind events\n    this.once('playing', (song) => {\n      this.playing = song\n      this.history.push(song)\n    })\n\n    events.EventEmitter.call(this)\n  }\n  \n  /**\n   * [Play a mp3 list]\n   * @param  {Function} done     [the callback function when all mp3s play end]\n   * @param  {[type]}   selected [the selected mp3 object.]\n   */\n  play(done, selected) {\n    var self = this\n\n    if (done !== 'next')\n      this.once('done', _.isFunction(done) ? done : errHandler)\n\n    if (this.list.length <= 0)\n      return\n\n    async.eachSeries(\n      selected || this.list, \n      startPlay, \n      (err) => this.emit('done', err)\n    )\n\n    function startPlay(song, callback) {\n      var url = _.isString(song) ?\n        song :\n        song[self.options.src]\n\n      self.read(url, onPlay)\n\n      function onPlay(err, pool) {\n        if (err)\n          return callback(err)\n\n        pool\n          .pipe(new lame.Decoder())\n          .once('format', onPlaying)\n          .once('finish', onFinished)\n\n        function onPlaying(f) {\n          var speaker = new Speaker(f)\n\n          self.speaker = {};\n          self.speaker.readableStream = this\n          self.speaker.Speaker = speaker\n          self.emit('playing', song)\n\n          try {\n            self.show(song, require('musicmetadata'))\n          } catch (err) {}\n\n          // This is where the song acturaly played end,\n          // can't trigger playend event here cause\n          // unpipe will fire this speaker's close event.\n          this.pipe(speaker)\n            .once('close', () => self.emit('stopped', song))\n        }\n\n        function onFinished() {\n          self.list = self.list.filter((i) => i['_id'] != song._id)\n          self.emit('playend', song)\n\n          // Switch to next one\n          callback(null)\n        }\n      }\n    }\n\n    function errHandler(err) {\n      if (err) \n        throw err\n\n      return\n    }\n\n  }\n\n  /**\n   * [Read mp3 src and check if we're going to download it.]\n   * @param  {String}   src    [mp3 file src, would be local path or URI (http/https)]\n   * @param  {Function} callback [callback with err and file stream]\n   */\n  read(src, callback) {\n    var isLocal = !(src.indexOf('http') == 0 || src.indexOf('https') == 0)\n\n    // Read local file stream if not a valid URI\n    if (isLocal)\n      return callback(null, fs.createReadStream(src))\n\n    var file = path.join(\n      this.options.downloads,\n      fetchName(src)\n    )\n\n    if (fs.existsSync(file))\n      return callback(null, fs.createReadStream(file))\n\n    this.download(src, callback)\n  }\n\n  /**\n   * [Stop playing and unpipe stream.\n   * No params for now.]\n   * @return {Bool} [always `false`]\n   */\n  stop() {\n    if (!this.speaker)\n      return\n\n    this.speaker\n      .readableStream\n      .unpipe()\n\n    this.speaker\n      .Speaker\n      .end()\n\n    return\n  }\n\n  /**\n   * [Stop playing and switch to next song,\n   * if there is no next song, callback with a `No next` Error object.]\n   * @param  {Function} callback [callback with err and next song.]\n   * @return {Bool}\n   */\n  next(callback) {\n    var list = this.list;\n    var current = this.history[this.history.length - 1];\n    var next = list[current._id + 1];\n    var isCallback = callback && _.isFunction(callback);\n\n    if (!next) {\n      if (isCallback)\n        return callback(new Error('No next'))\n\n      return\n    }\n\n    this.stop()\n    this.play('next', list.slice(next._id))\n\n    return isCallback ? callback(null, next, current) : true\n  }\n\n  /**\n   * [Add a new song to the playlist,\n   * If provided `song` is a String, it will be converted to a `Song` Object.]\n   * @param {String|Object} song [src URI of new song or the object of new song.]\n   */\n  add(song) {\n    if (!this.list)\n      this.list = []\n\n    var latest = _.isObject(song) ? song : {}\n\n    latest._id = this.list.length\n\n    if (_.isString(song))\n      latest.src = song\n\n    this.list.push(latest)\n  }\n\n  /**\n   * [Download a mp3 file from its URI]\n   * @param  {String}   src      [the src URI of mp3 file]\n   * @param  {Function} callback [callback with err and file stream]\n   */\n  download(src, callback) {\n    var self = this\n    var called = false\n    var proxyReg = /http:\\/\\/((?:\\d{1,3}\\.){3}\\d{1,3}):(\\d+)/\n    var http_proxy = self.options.http_proxy\n    var request = src.indexOf('https') === 0 ? https : http\n    var query = src\n\n    if (http_proxy && proxyReg.test(http_proxy)) {\n      var proxyGroup = http_proxy.match(proxyReg)\n      query = {}\n      query.path = src\n      query.host = proxyGroup[1]\n      query.port = proxyGroup[2]\n    }\n\n    request\n      .get(query, responseHandler)\n      .once('error', errorHandler)\n\n    function responseHandler(res) {\n      called = true\n\n      var isOk = (res.statusCode === 200)\n      var isAudio = (res.headers['content-type'].indexOf('audio/mpeg') > -1)\n      var isSave = self.options.cache\n      var isStream = self.options.stream\n\n      if (!isOk)\n        return callback(new Error('Resource invalid'))\n      if (isStream)\n        return callback(null, res)\n      if (!isAudio)\n        return callback(new Error('Resource type is unsupported'))\n\n      // Create a pool\n      var pool = new PoolStream()\n      // Pipe into memory\n      res.pipe(pool)\n\n      // Check if we're going to save this stream\n      if (!isSave)\n        return callback(null, pool)\n\n      // Save this stream as file in download directory\n      var file = path.join(\n        self.options.downloads,\n        fetchName(src)\n      )\n\n      self.emit('downloading', src)\n      pool.pipe(fs.createWriteStream(file))\n\n      // Callback the pool\n      callback(null, pool)\n    }\n\n    function errorHandler(err) {\n      if (!called)\n        callback(err)\n    }\n  }\n\n  /**\n   * [Lists songs in the playlist,\n   * Displays the src for each song returned in JSON]\n   */\n  playList() {\n    if (!this.list)\n      return\n\n    return JSON.stringify(\n      this.list.map((el) => el['src'])\n    )\n  }\n\n  show(song, mm) {\n    var total = 70\n    var name = song['src'].split('/').pop()\n    var options = {\n      'duration': true\n    }\n    \n    try {\n      (mm || require('musicmetadata'))(fs.createReadStream(name), options, showMeta)\n\n      function showMeta(err, metadata) {\n        if (err) {\n          console.log(`Now playing: ${name} (No metadata found)`);\n          return\n        }\n\n        var info = metadata.title\n        var duration = parseInt(metadata.duration)\n        var dots = total - 1\n        var speed = (duration * 1000) / total\n\n        async.doWhilst(\n          (callback) => {\n            // Doesn't work sometimes on mac\n            // process.stdout.clearLine()\n\n            // Clear console\n            process.stdout.write('\\0o33c')\n\n            // Move cursor to beginning of line\n            process.stdout.cursorTo(0)\n            process.stdout.write(getProgress(total - dots, total, info))\n\n            setTimeout(callback, speed)\n\n            dots--\n          },\n          () => dots > 0,\n          (done) => {\n            process.stdout.moveCursor(0, -1)\n            process.stdout.clearLine()\n            process.stdout.cursorTo(0)\n          }\n        )\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n\nutil.inherits(Player, events.EventEmitter)\n"]}